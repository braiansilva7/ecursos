package com.ecursos.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TurmaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTurmaAllPropertiesEquals(Turma expected, Turma actual) {
        assertTurmaAutoGeneratedPropertiesEquals(expected, actual);
        assertTurmaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTurmaAllUpdatablePropertiesEquals(Turma expected, Turma actual) {
        assertTurmaUpdatableFieldsEquals(expected, actual);
        assertTurmaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTurmaAutoGeneratedPropertiesEquals(Turma expected, Turma actual) {
        assertThat(expected)
            .as("Verify Turma auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTurmaUpdatableFieldsEquals(Turma expected, Turma actual) {
        assertThat(expected)
            .as("Verify Turma relevant properties")
            .satisfies(e -> assertThat(e.getInicio()).as("check inicio").isEqualTo(actual.getInicio()))
            .satisfies(e -> assertThat(e.getTermino()).as("check termino").isEqualTo(actual.getTermino()))
            .satisfies(e -> assertThat(e.getAno()).as("check ano").isEqualTo(actual.getAno()))
            .satisfies(e -> assertThat(e.getStatusCurso()).as("check statusCurso").isEqualTo(actual.getStatusCurso()))
            .satisfies(e -> assertThat(e.getModalidade()).as("check modalidade").isEqualTo(actual.getModalidade()))
            .satisfies(e -> assertThat(e.getQtdVagas()).as("check qtdVagas").isEqualTo(actual.getQtdVagas()))
            .satisfies(e -> assertThat(e.getNumeroBca()).as("check numeroBca").isEqualTo(actual.getNumeroBca()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTurmaUpdatableRelationshipsEquals(Turma expected, Turma actual) {
        assertThat(expected)
            .as("Verify Turma relationships")
            .satisfies(e -> assertThat(e.getCurso()).as("check curso").isEqualTo(actual.getCurso()));
    }
}
