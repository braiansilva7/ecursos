package com.ecursos.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PostoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostoAllPropertiesEquals(Posto expected, Posto actual) {
        assertPostoAutoGeneratedPropertiesEquals(expected, actual);
        assertPostoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostoAllUpdatablePropertiesEquals(Posto expected, Posto actual) {
        assertPostoUpdatableFieldsEquals(expected, actual);
        assertPostoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostoAutoGeneratedPropertiesEquals(Posto expected, Posto actual) {
        assertThat(expected)
            .as("Verify Posto auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostoUpdatableFieldsEquals(Posto expected, Posto actual) {
        assertThat(expected)
            .as("Verify Posto relevant properties")
            .satisfies(e -> assertThat(e.getPostoSigla()).as("check postoSigla").isEqualTo(actual.getPostoSigla()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getPrioridade()).as("check prioridade").isEqualTo(actual.getPrioridade()))
            .satisfies(e -> assertThat(e.getOrgao()).as("check orgao").isEqualTo(actual.getOrgao()))
            .satisfies(e -> assertThat(e.getCodSigpes()).as("check codSigpes").isEqualTo(actual.getCodSigpes()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostoUpdatableRelationshipsEquals(Posto expected, Posto actual) {
        // empty method
    }
}
